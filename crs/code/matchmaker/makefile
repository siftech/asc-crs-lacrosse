# Starting auto-gen code
AMPDIR = ../amp
CC = gcc
CXX = g++
LEX = /usr/bin/flex
PERL = /usr/bin/perl
PLATFORM_FLAGS = -Iflex-test -Iaid -DLINUX -Wno-deprecated
# tmarble do not need graphics
# PLATFORM_LIBS = -L/usr/lib -lX11 -lfl -lGL -lGLU -lm -lpthread
PLATFORM_LIBS = -L/usr/lib -lfl -lm -lpthread
PLATFORM_LDFLAGS = -static
#PLATFORM_LDFLAGS =
CSMDIR = ../csm
GRAPHICS_OBJS = X_graphics.o
GRAPHICS_SRCS = X_graphics.c
HAMMER_ROOT = ../satellite-sim
HAMMER_LIB_DIR = ../satellite-sim/lib
HAMMER_INC_DIR = ../satellite-sim/src/cpp/include
HAMMER_LIBS = -lcirca-jnibridge
PRIMITIVES_SRC = primitives-Prt.c
PRIMITIVES_OBJS = $(PRIMITIVES_SRC:%.c=%.o)
DOMAINFILE = ${CSMDIR}/sat-two-laser-prt-wide-window.lisp
DOMAIN_LIBS = -ljvm -L${HAMMER_LIB_DIR} ${HAMMER_LIBS}
DOMAIN_FLAGS = -DNDEBUG -DJVMINIT -I${HAMMER_INC_DIR}  -DSIFT_PRIMITIVE_SLEEP=1000  -DAUTO_START_RTS  -DSIFT_JVM_CLASSPATH="${HAMMER_ROOT}/bin" -I/usr/lib/jvm/java-6-openjdk/include -I/usr/lib/jvm/java-6-openjdk/include/linux 
DOMAIN_LDFLAGS = -LNIL -Xlinker -R -Xlinker NIL -Xlinker -R -Xlinker ${HAMMER_LIB_DIR}
RTS_LIB=
# Parameters passed to the c compiler.
CFLAGS = ${PLATFORM_FLAGS} ${DOMAIN_FLAGS}



# Parameters passed to the c++ compiler.
CXXFLAGS = ${CFLAGS}

# Objects needed for each target.
RTS_OBJS = \
	rts.o sockets.o lex.yy.o client.o parse.o \
	timer.o collab.o \
	autographics.o ${PRIMITIVES_OBJS} ${GRAPHICS_OBJS} ${DOMAIN_OBJS}

MM_OBJS = matchmaker.o sockets.o collab.o

MMRESET_OBJS = mmreset.o sockets.o collab.o

MMHEALTH_OBJS = mmhealth.o sockets.o collab.o

MMKILLER_OBJS = mmkiller.o sockets.o collab.o

SERVER_OBJS = server.o sockets.o

# CLIENT_OBJS = client.o sockets.o

# TIMER_OBJS = t.o timer.o primitives.o

# All source files used by any program in this makefile. This list is used by
# the depend rule to make the dependency information.
SRCS = \
	rts.c sockets.c client.c parse.c timer.c collab.c rts.lex \
	autographics.c ${PRIMITIVES_SRC} ${GRAPHICS_SRCS} ${DOMAIN_SRCS}

# Files generated by parse_trans
PARSE_TRANS_FILES = \
	auto.lex primitives.h primdefs.c autographics.c \
	 ${CSMDIR}/timings.lisp

# Rule to make everything.
# As of 1/31/2002 neither client, nor timer has everything needed to compile.
# all: rts mm mmreset mmkiller server client timer
# all: sim rts mm mmreset mmkiller server
# [mboldt:20140915] For FuzzBomb, just want matchmaker.
MM_EXECS = mm mmhealth mmreset mmkiller tell-amp
all: ${MM_EXECS}

# Rules for LINKING targets.
server: ${SERVER_OBJS}
	${CXX} -o server ${SERVER_OBJS} ${PLATFORM_LIBS} ${PLATFORM_LDFLAGS}

#client: ${CLIENT_OBJS}
#	${CXX} -o client ${CLIENT_OBJS} ${PLATFORM_LIBS} ${PLATFORM_LDFLAGS}

rts: ${RTS_OBJS} ${RTS_LIB}
	${CXX} -o rts ${RTS_OBJS} ${PLATFORM_LIBS} ${DOMAIN_LIBS} ${PLATFORM_LDFLAGS} ${DOMAIN_LDFLAGS}


mm: ${MM_OBJS}
	${CXX} -o mm ${MM_OBJS} ${PLATFORM_LIBS} ${PLATFORM_LDFLAGS}

mmhealth: ${MMHEALTH_OBJS}
	${CXX} -o mmhealth ${MMHEALTH_OBJS} ${PLATFORM_LIBS} ${PLATFORM_LDFLAGS}

mmreset: ${MMRESET_OBJS}
	${CXX} -o mmreset ${MMRESET_OBJS} ${PLATFORM_LIBS} ${PLATFORM_LDFLAGS}

mmkiller: ${MMKILLER_OBJS}
	${CXX} -o mmkiller ${MMKILLER_OBJS} ${PLATFORM_LIBS} ${PLATFORM_LDFLAGS}

tell-amp: tell-amp.o sockets.o collab.o
	${CXX} -o tell-amp tell-amp.o sockets.o collab.o ${PLATFORM_LIBS} ${PLATFORM_LDFLAGS}

sim:
	cd ../satellite-sim; make

#timer: ${TIMER_OBJS}
#	${CXX} -o timer ${TIMER_OBJS} ${PLATFORM_LIBS} ${PLATFORM_LDFLAGS}

# Rules for auto-generated files.

# Files generated by parse_trans.
${PARSE_TRANS_FILES}: \
	${DOMAINFILE} ${PRIMITIVES_SRC} parse_trans
	${PERL} parse_trans ${CSMDIR} ${DOMAINFILE} ${PRIMITIVES_SRC}

# Lexical scanners, auto-gen from parse_trans output and flex
lex.yy.c: rts.lex auto.lex
	${PERL} xpand rts.lex | ${LEX}

# Only used in domains that use the push cache (see push-cach.c for more info)
lex.pc.cc: pc.lex auto.lex
	${PERL} xpand pc.lex | ${LEX} -i -+ -t > lex.pc.cc
	cp lex.pc.cc lex.pc.cc.cp
	sed -e "/<FlexLexer.h>/s/<FlexLexer.h>/"\"FlexLexer.h\"/g"" lex.pc.cc.cp > lex.pc.cc

# Only used in domains that use the external comms parser
y.tab.o : y.tab.c
	${CC} -c y.tab.c ${CFLAGS}

lex.ext.o : lex.ext.c
	${CC} -c lex.ext.c ${CFLAGS}

y.tab.c : ext.yacc
	yacc -d ext.yacc
	${PERL} fixytab y.tab.c

# Only used in domains that use the external comms parser
lex.ext.c: ext.lex y.tab.c
	${LEX} -i -Pext -t ext.lex > lex.ext.c


# Utility rules.
clean: clean_domain
	rm -f *.o *~ lex.yy.c lex.pc.cc

really_clean: clean
	rm -f ${MM_EXECS}

# Eliminates auto-generated domain files.
clean_domain:
	rm -f ${PARSE_TRANS_FILES} *.duplC *.xpand.C

# Creates the dependencies.
depend: ${PARSE_TRANS_FILES}
	./g++dep -f makefile ${CFLAGS} ${SRCS}

# [carciofi:20021006.0240CST] Rules for dupl magic
%.duplC : %.dupl duplprims
	${PERL} ./duplprims $< > $@

%.xpand.C : %.C %.duplC xpand
	${PERL} ./xpand -t $< > $@

# Ending auto-gen code
# DO NOT DELETE THIS LINE -- g++dep uses it.
# DO NOT PUT ANYTHING AFTER THIS LINE, IT WILL GO AWAY.

  rts.o: \
  rts.c \
  sockets.h \
  primitives.h \
  defs.h \
  debug.h \
  semaphore.h \
  collab.h \
  timer.h \
  graphics.h \
  primitives-timing.c
  sockets.o: \
  sockets.c
  client.o: \
  client.c \
  sockets.h \
  defs.h \
  debug.h \
  semaphore.h
  parse.o: \
  parse.c \
  defs.h \
  debug.h \
  semaphore.h \
  primitives.h
  timer.o: \
  timer.c \
  timer.h \
  defs.h \
  debug.h \
  semaphore.h
  collab.o: \
  collab.c \
  defs.h \
  debug.h \
  semaphore.h \
  collab.h
  autographics.o: \
  autographics.c \
  graphics.h
  X_graphics.o: \
  X_graphics.c \
  defs.h \
  debug.h \
  semaphore.h \
  primitives.h \
  X_graphics.h \
  graphics.h

# IF YOU PUT ANYTHING HERE IT WILL GO AWAY
