#!/bin/bash
# no args; hardwired for OPT0

# FIXME if we want multiple OPT this needs to take args like run-ccl-agent
# FIXME and would need a start-matchmaker arg too

thisdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd -P "$( dirname "$SOURCE" )" && /bin/pwd )"

export CIRCA_MM_HOST=$1
export CIRCA_BASEPORT=$2
export AGENT_NAME=$3

export DOCKER_EXTRA_ARGS="-e CP_BASE_EXTRA_CFLAGS=-g -e CP_BASE_EXTRA_CXXFLAGS=-g -e CP_HARNESS_EXTRA_CFLAGS=-g -e CP_HARNESS_EXTRA_CXXFLAGS=-g"

if [ "${AT_SIFT}" -eq "0" ]; then echo "AT_SIFT is set to 0"; else \
  echo "AT_SIFT is set to 1. Create LOGDIR."
# find the most recent logdir and write there, if you find one, else /crs_scratch per competition
	LOGDIR=`find /lacrosse/code/test/results/ -mindepth 1 -maxdepth 3 -type d -printf "%T@\t%p\n" | sort -n | cut -f2- | tail -n1`
	LOGDIR=${LOGDIR:-/crs_scratch} ;
fi

# if [ "${AT_SIFT}" -eq "0" ]; then
#   $thisdir/wait-for-file ${AIXCC_CRS_SCRATCH_SPACE}/mm-is-up 6000
# fi

# wait until we see a non-forbidden timestamp
$thisdir/wait-for-file /crs_scratch/timestamp 6000
if [ -f forbidden-timestamp ]; then
  until ! cmp -s /crs_scratch/timestamp /crs_scratch/forbidden-timestamp
  do
    echo "Waiting for non-forbidden timestamp"
    sleep 5
  done
fi
echo "Found non-forbidden timestamp!"

pushd ../matchmaker
make mmhealth
popd
echo "${AGENT_NAME} is waiting for mmhealth"
$thisdir/wait-for-mmhealth
echo "${AGENT_NAME} has found mmhealth"

cd ../lisp
# this is *exactly* the same as how normal run-ccl-agent works... except redirect output to files b/c 
# stupid docker compose wont let me stash em right
# CIRCA_MM_HOST=${CIRCA_MM_HOST} \
#   CIRCA_BASEPORT=${CIRCA_BASEPORT} \
  # ccl -Q -n -l load.lisp -e "(progn (setf *fb-instance* \"${AGENT_NAME}\") (load \"../experiment.lisp\") (fb::run-amp :name \"${AGENT_NAME}\") (quit))" 1>$LOGDIR/${AGENT_NAME}.log 2>&1

if [ "${AT_SIFT}" -eq "0" ]; then 
  echo "${AGENT_NAME} running NOT at SIFT"
  ccl -Q -n -l load.lisp -e "(progn (setf *fb-instance* \"${AGENT_NAME}\") (load \"/lacrosse/code/experiment.lisp\") (fb::run-amp :name \"${AGENT_NAME}\") (quit))";
else 
  echo "${AGENT_NAME} running at SIFT"
  ccl -Q -n -l load.lisp -e "(progn (setf *fb-instance* \"${AGENT_NAME}\") (load \"/lacrosse/code/experiment.lisp\") (fb::run-amp :name \"${AGENT_NAME}\") (quit))" 1>$LOGDIR/${AGENT_NAME}.log 2>&1;
fi

